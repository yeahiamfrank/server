# ------------------------------------------------------------------------------------------- #
#              ______                        _      _  _  _    _                              #
#              |  ____|             /\       | |    | |(_)| |  (_)                            #
#              | |__  ___ __  __   /  \    __| |  __| | _ | |_  _   ___   _ __                #
#              |  __|/ _ \\ \/ /  / /\ \  / _` | / _` || || __|| | / _ \ | '_ \               #
#              | |  | (_) |>  <  / ____ \| (_| || (_| || || |_ | || (_) || | | |              #
#              |_|   \___//_/\_\/_/    \_\\__,_| \__,_||_| \__||_| \___/ |_| |_|              #
#                                                                                             #
#                                          [v1.2.0]                                           #
#                                                                                             #
# ------------------------------------------------------------------------------------------- #
# [QUICK TIP #1]
# For all checks, include the following:
#
# detect:
#   # Do you want to detect this check to Java players?
#   # Default if Bedrock Support is not hooked.
#   java: true
#   # Do you want to detect this check to Bedrock players?
#   bedrock: true
#
# With this, you can specify the player types you want to check: Java or Bedrock players.
# If you don't have Bedrock Support enabled, this option will have no effect and will detect both
# with the option 'java' in true.
# ------------------------------------------------------------------------------------------- #
# [QUICK TIP #2]
# For all category of checks, this include the following:
#
#  # Optionally, disable this check in specific worlds.
#  disabled-worlds: {}
#
# This allow you to exclude in what worlds you want to disable X category of checks.
# But, how is the format? The format is like this:
#
# disabled-worlds:
# - Auth
# - LuckyWars
#
# In that, you can add more worlds to exclude or exclude a single world, if you want
# disable this feature, only set the value with '{}'.
# ------------------------------------------------------------------------------------------- #
# If you still has questions, you can join to the discord server in:
# https://discord.com/invite/FTtVXfj or you can use the Discussion page in https://www.spigotmc.org/threads/612025/.

## BadPackets
# Prevent players from using unauthorized packets or actions on the server.
badpackets:
  # Optionally, disable this check in specific worlds.
  disabled-worlds: {}

  # List of modules.
  modules:
    fastswitch:
      # Enable FastSwitch check?
      # Prevents players from switching hotbar selections too quickly.
      detect:
        java: true
        # This is recommended disable, because bedrock players can get
        # false flags easy, this is enabled for a better protection, but
        # if you get too much false flags, you can disable.
        bedrock: true
      # Specifies the minimum time allowed between two consecutive events or actions.
      # This refers to the minimum time that must elapse between two changes in the hotbar
      # selection for a player. Setting a higher value can detect false flags, while a lower value
      # can allow more bypasses.
      interval: 50
      # Add VLs (Violation Levels) to apply when this check fails.|
      vls: 2
      # Should block the event when detected?
      cancel: true
    fastuse:
      # Enable FastUse check?
      # Prevents players from using items too quickly.
      detect:
        java: true
        bedrock: true
      # Ignore effiency enchantment for some X types of servers?
      # This can false a lot to players with high effiency in their item.
      effiency:
        # Items to ignore:
        # Here you can specify certain items that may have the Efficiency enchantment.
        # You can change, enable, or disable this feature as needed.
        #
        # WARNING! Enabling this feature may reduce false flags, but it could also
        # allow players to bypass detection if they have an item with the Efficiency
        # enchantment in their hand with a level equal to or greater than the specified maximum.
        items:
          # Pickaxe item.
          pickaxe:
            # Enable this feature?
            enable: false
            # What is the max effiency to start ignoring
            # players with high value of enchantment.
            max: 15
          # Axe item.
          axe:
            # Enable this feature?
            enable: false
            # What is the max effiency to start ignoring
            # players with high value of enchantment.
            max: 15
          # Shovel item.
          shovel:
            # Enable this feature?
            enable: false
            # What is the max effiency to start ignoring
            # players with high value of enchantment.
            max: 15
      # Specifies the maximum number of use-items allowed within a specified interval of time.
      # For instance, if you set it to 25, up to 25 used items are allowed within the specified
      # time interval.
      max: 30
      # Specifies the time interval in milliseconds during which used items are counted.
      # For example, if you set the interval to 1000, used items will be counted within
      # a 1-second interval (1000 milliseconds).
      interval: 145
      # Set the divisor by which violations are recorded if it
      # divides the count. This helps reduce spam, but if the cancel option is enabled,
      # events will still be canceled.
      divisor: 50
      # Add VLs (Violation Levels) to apply when this check fails.
      vls: 1
      # Should block interaction when detected?
      cancel:
        # Enable this feature?
        enable: true
        # In what vl this start to cancel?
        # Define '0' to cancel everytime.
        vl: 2
    # Regen module doesn't have violation levels (VLs).
    # It only prevents illegal regeneration. If you don't want this check,
    # you can disable it.
    regen:
      # Enable Regen check?
      # Prevents players from regenerating too quickly.
      detect:
        java: true
        bedrock: true
      # Specifies the minimum delay time between consecutive regeneration events. In
      # Minecraft, when a player takes damage and then automatically regenerates health,
      # there is a small delay before the regeneration begins. You can adjust the value
      # to customize the minimum delay time between consecutive regeneration events. A
      # higher value can block regeneration with possible false positives, while a lower value can allow
      # potential bypasses in some cases.
      min: 600
    sneak:
      # Enable Sneak check?
      # Prevents players from sneaking too quickly.
      detect:
        java: true
        bedrock: true
      # Check for sprinting when sneaking?
      # This prevent an exploit in older version of some hacks that allow the sprint when
      # the player is sneaking. This also prevent the usage of Sneak spoof.
      check_sprint: true
      # Specifies the maximum number of sneaks allowed within a specified interval of time.
      # For example, if you set it to 10, up to 10 sneaks are allowed within the specified
      # time interval.
      max: 25
      # Specifies the time interval in milliseconds during which sneaks are counted.
      # For instance, if you set the interval to 500, sneaks will be counted within
      # a 1-second interval (500 milliseconds).
      interval: 100
      # Add VLs (Violation Levels) to apply when this check fails.
      vls: 5
      # Should block sneaks when detected?
      cancel: true
    # Prevents players from making some bad actions
    # or impossible actions that a normal player can't
    # make. This checks can be detected by another
    # plugins, if you have a plugin that detect this,
    # you can disable this to save performance.
    impossible:
      # List of modules.
      modules:
        blocks:
            # Prevents players from place blocks without support in the Air.
            # This can has some false flags, if you find, don't forgot to report
            # in the discord server support.
            airplacement:
              # Enable Air Placement check?
              # This automatically remove the placement.
              detect:
                java: true
                bedrock: true
              # Add VLs (Violation Levels) to apply when this check fails.
              # This action is totally impossible to make by a normal user,
              # is recommended a big value to avoid this exploit/hack better.
              vls: 5
            # Prevents players from bad placements with liquids.
            liquidinteract:
              # Enable Liquid Interact check?
              detect:
                java: true
                bedrock: true
              # Should it allow attempts to prevent interactions when
              # detected?
              cancel: true
              # Add VLs (Violation Levels) to apply when this check fails.
              # This action is totally impossible to make by a normal user,
              # is recommended a big value to avoid this exploit/hack better.
              vls: 4
        # This check monitors player actions to prevent unauthorized actions that are
        # not part of the game's mechanics or are outside the scope of normal player
        # behavior.
        # This automatically cancel the events.
        protocols:
          # List of modules.
          modules:
            # Do you want enable Protocol A check?
            # Check if the player change slot to a equal slot.
            # [THIS CAN PROBABLY MAKE CONFLICT WITH FASTSWITCH CHECK!]
            # [REQUIRED PROTOCOLLIB]
            a:
              # Do you want enable this feature?
              enable: true
              # Add VLs (Violation Levels) to apply when this check fails.
              vls: 1
            # Do you want enable Protocol B check?
            # Check if the player change slot to a invalid slot.
            # [REQUIRED PROTOCOLLIB]
            b:
              # Do you want enable this feature?
              enable: true
              # Add VLs (Violation Levels) to apply when this check fails.
              vls: 2
            # Do you want enable Protocol C check?
            # Check if the player send invalid keepalive id.
            # [REQUIRED PROTOCOLLIB]
            c:
              # Do you want enable this feature?
              enable: true
              # Add VLs (Violation Levels) to apply when this check fails.
              vls: 4
            # Do you want enable Protocol D check?
            # Check if the player send duplicated keepalive id.
            # [REQUIRED PROTOCOLLIB]
            d:
              # Do you want enable this feature?
              enable: true
              # Add VLs (Violation Levels) to apply when this check fails.
              vls: 4
        # Prevent players from change their skin in the menu of settings in certain
        # cases. This automatically ignore bedrock players to avoid problems.
        # This check can also be called "SkinDerp".
        # [REQUIRED PROTOCOLLIB]
        # [ONLY WORKS WITH JAVA EDITION]
        skinblinker:
          # Should it allow attempts to prevent this packet when detected?
          # When you flag a first time, this continue cancelling the
          # packet, this only has a cooldown to reduce spam of vls/flags.
          cancel: true
          # Prevent player from modify their skin too fast.
          spammer:
            # Enable SkinBlinker (Delay) module?
            enable: true
            # Define the interval in ms to reset the count.
            interval: 1000
            # Define the maximum changes in X amount of time.
            max: 5
            # Add VLs (Violation Levels) to apply when this check fails.
            vls: 2
          # Prevent player from modify their skin in action.
          actions:
            # Detect player when change their skin when is sprinting?
            sprinting: true
            # Detect player when change their skin when is sneaking?
            # This also detect when the player is changing their skin
            # when they are sleeping.
            sneaking: true
            # Detect player when change their skin when is blocking?
            blocking: true
            # Add VLs (Violation Levels) to apply when this check fails.
            vls: 2
        
  # The decay is used to configure the decay system for VLS (Violation Levels).
  # Decay is a mechanism that gradually reduces a player's VLS over time.
  decay:
    # Enable this feature?
    enable: true
    # Determines how often the decay process runs (in seconds).
    interval: 10
    # Specifies the amount of VLS to subtract from a player's VLS
    # in each decay.
    amount: 5
  # Violation Thresholds
  commands:
    5: 'foxaddition notify &e{player}&r is suspected for &a&lBadPackets&r.'
    10: 'foxaddition notify &e{player}&r might be using &a&lBadPackets&r.'
    12:
      - 'foxaddition notify &e{player}&r has been removed for &aBadPackets&r.'
      - 'kick {player} Unauthorized packets or actions on the server.'

## Blocks
# Prevent players from engaging in unauthorized activities with blocks.
blocks:
  # Optionally, disable this check in specific worlds.
  disabled-worlds: {}

  # List of modules.
  modules:
    fastplace:
      # Enable FastPlace check?
      # Prevents players from rapidly placing blocks.
      detect:
        java: true
        bedrock: true
      # Specifies the minimum time delay between block placements
      # in milliseconds.
      interval: 60
      # Should block placements when detected?
      cancel:
        # Do you want to enable this feature?
        # If enabled, the anticheat will prevent the block placement.
        enable: true
        # Should the block be restored after being prevented?
        # Use 'true' to restore the block, or 'false' to remove it.
        giveBlock: true
      # Add Violation Levels (VLs) to apply when this check fails.
      vls: 1
    nuker:
      limit:
        # Enable Nuker (Limit) check?
        # This check prevents players from rapidly breaking blocks in a
        # certain radius. Disabling this check can enhance performance, as the FastUse check
        # can detect some instances of this behavior.
        detect:
          java: true
          bedrock: true
        # Specifies the maximum number of blocks a player can break within
        # a certain time period in milliseconds.
        max: 6
        # Specifies the time duration to reset the block-break counter.
        # For some types of Nuker hacks with very short intervals (e.g., 0 or 1 millisecond delay),
        # you can use this hack and check the logs. Be cautious not to set the reset
        # time too low, as it might interfere with the cancel option's functioning.
        delay: 100
        # Set the divisor by which violations are recorded if it
        # divides the count. This helps reduce spam, but if the cancel option is enabled,
        # events will still be canceled.
        divisor: 50
        # Check only for certain types of blocks?
        # This can be optional to use.
        blocklist:
          # Enable this feature?
          enable: false
          # Define the type of usage to this list.
          # 'whitelist': Allow the detection for only certain blocks.
          # 'blacklist': Deny the detection in certain types of blocks.
          type: whitelist
          # Define here the blocks to whitelist/blacklist here.
          list:
          - SUGAR_CANE
        # Add Violation Levels (VLs) to apply when this check fails.
        # It is advisable to avoid setting a high value, as Nuker hacks can generate
        # spam of violations, which, when combined with the cancel option, may block
        # the ability to break blocks for an extended period.
        vls: 1
        # Should it allow attempts to block breaking when detected?
        # It will also attempt to restore broken blocks.
        cancel: true
      target:
        # Enable Nuker (Target) check?
        # This check prevents players from break blocks out of target, this is
        # a little low to detect but is better a check.
        # [REQUIRED PROTOCOLLIB]
        detect:
          java: true
          bedrock: true
        # Add Violation Levels (VLs) to apply when this check fails.
        # This check is low in detect, you really need to add a high value
        # of vls for a better punishment.
        vls: 5
        # Check only for certain types of blocks?
        # This can be optional to use.
        blocklist:
          # Enable this feature?
          enable: false
          # Define the type of usage to this list.
          # 'whitelist': Allow the detection for only certain blocks.
          # 'blacklist': Deny the detection in certain types of blocks.
          type: whitelist
          # Define here the blocks to whitelist/blacklist here.
          list:
          - SUGAR_CANE
        # Should it block forced the breakings on detect?
        # This by default cancel the packet, but you can make a force cancel
        # to block better this, if you enable this, you allow the anticheat
        # to attempt in block breakings until the player stop of breaking.
        force_cancel:
          # Enable this feature?
          # [EXTREMELY RECOMMENDED]
          enable: true
          # Define here the MilliSeconds (MS) to block the breaking.
          # This MS reset the time when the player break again a block.
          # Example:
          #
          # X = Is the time in MS of this option.
          #
          # The player is detected, this set the time to X.
          # If the player break a block, this reset to X, but
          # if the time pass and the player don't break a block,
          # the player can break again.
          ms: 215

  # The decay is used to configure the decay system for VLS (Violation Levels).
  # Decay is a mechanism that gradually reduces a player's VLS over time.
  decay:
    # Enable this feature?
    enable: true
    # Determines how often the decay process runs (in seconds).
    interval: 10
    # Specifies the amount of VLS to subtract from a player's VLS
    # in each decay.
    amount: 4
  # Violation Thresholds
  commands:
    6: 'foxaddition notify &e{player}&r is suspected for &a&lBlocks&r.'
    8: 'foxaddition notify &e{player}&r is malicious interacting with &a&lBlocks&r.'
    10:
      - 'foxaddition notify &e{player}&r has been removed for &aBlocks&f.'
      - 'kick {player} Engaging in illegal block actions.'
      
## FastBow
# This check prevents players from utilizing the FastBow hack, which allows them to shoot faster than usual.
fastbow:
  # Optionally, disable this check in specific worlds.
  disabled-worlds: {}

  # List of modules.
  modules:
    lenience:
      # Enable FastBow [Lenience] check?
      # Checks for perfect timing in the specified interval for both shots.
      detect:
        java: true
        bedrock: true
      # Specifies the maximum time allowed for drawing back a bow before shooting an arrow.
      lenience: 151
      # Sets the time interval in milliseconds during which both shots are counted.
      interval: 950
      # Should shooting be blocked when detected?
      cancel:
        # Enable this feature?
        enable: true
        # Choose the type of cancelation you desire:
        # - "block": Prevent the shot when detected.
        # - "hotbar": Change the player's hotbar selection.
        type: block
      # Add Violation Levels (VLs) to apply when this check fails.
      vls: 1
    limit:
      # Enable FastBow [Limit] check?
      # Check if the player shot more than the limit in specified interval.
      detect:
        java: true
        bedrock: true
      # Set the maximum number of shots allowed within a specific time interval.
      # For instance, if set to 3, it permits up to 3 arrow shots within the specified time interval.
      maxShoots: 5
      # Specify the time interval in milliseconds for counting arrow shots.
      # For example, if the interval is set to 1000, arrow shots will be counted within a 1-second interval (1000 milliseconds).
      interval: 600
      # Should shooting be blocked when detected?
      cancel:
        # Enable this feature?
        enable: true
        # Choose the type of cancelation you desire:
        # - "block": Prevent the shot when detected.
        # - "hotbar": Change the player's hotbar selection.
        type: block
      # Add Violation Levels (VLs) to apply when this check fails.
      vls: 1

  # The decay is used to configure the decay system for VLS (Violation Levels).
  # Decay is a mechanism that gradually reduces a player's VLS over time.
  decay:
    # Enable this feature?
    enable: true
    # Determines how often the decay process runs (in seconds).
    interval: 5
    # Specifies the amount of VLS to subtract from a player's VLS
    # in each decay.
    amount: 1
  # Violation Thresholds
  commands:
    2: 'foxaddition notify &e{player}&r is suspected for &a&lFastBow&r.'
    4: 'foxaddition notify &e{player}&r is using &a&lFastBow&r.'
    5:
     - 'foxaddition notify &e{player}&r has been removed for &aFastBow&r.'
     - 'kick {player} Utilizing possible FastBow hack.'
     
## Misc
# This check prevents players from utilizing some external hacks related by Packets
# and some types of bad actions that can be called "exploits". Some of this checks
# only works if the anticheat hook with ProtocolLib, a check with "[REQUIRED PROTOCOLLIB]"
# is only available if is hooked by the anticheat when this start.
#
# [!] This checks, all detect both editions, in a future possible I add option to
# only detect a single edition equal to the others settings of checks.
misc:
  # Optionally, disable this check in specific worlds.
  disabled-worlds: {}

  # List of modules.
  modules:
    # Prevent players from see Pitch's that normal users can't see. 
    # [REQUIRED PROTOCOLLIB]
    illegalpitch:
      # Enable the Illegal Pitch blocker?
      enable: true
      # What mode you want to run for this check?
      # This check don't use VLs, so specify what you want.
      #
      # 1. Only block the movement.
      # Try to prevent the player from move when the Pitch is
      # an invalid that a normal user can't see. This is not
      # to much recommended because have some problems. You can
      # use this, but to avoid problems, use mode 2.
      #
      # 2. Block and kick player. [RECOMMENDED]
      # Prevent the player from move and make a instant-kick
      # to the player. This is recommended.
      mode: 2
    # Prevent players from making some exploits in your
    # server. This check can be an little anti-exploit system.
    # All modules in this check, don't work with the option
    # "disabled-worlds", if you have an anti-crasher or
    # anti-exploits, you can disable modules that your
    # anti-crash/anti-exploit have to save performance. Also,
    # this checks can prevent some types of disablers from
    # be used in the server.
    #
    # [!] This checks send in the console a log when a player
    # has been kicked.
    exploits:
      # List of modules.
      modules:
        # It blocks illegal shoot.
        bowbomb:
          # Enable BowBomb check?
          # Prevents players from exploiting bow bomb usage.
          enable: true
        # Prevent player from send "Spectate" packet
        # when this don't are in Spectator mode. This can prevent
        # some types of disablers.
        # [REQUIRED PROTOCOLLIB]
        fakespectate:
          # Enable the Fake Spectate blocker?
          # The player is instant-kicked when send this packet.
          enable: true
        # Prevent player from send "Set Creative Slot" packet
        # when this don't are in Creative mode. This can prevent
        # some types of disablers.
        # [REQUIRED PROTOCOLLIB]
        fakecreative:
          # Enable the Fake Creative blocker?
          # The player is instant-kicked when send this packet.
          enable: true
        # Prevent player from send "Abilities" packet when
        # this cannot use in that moment. This probably can
        # have problems with some plugins, if this is the
        # case, disable here. Probably other plugins can
        # control better this exploit/packet, but this is an
        # additional in case if any other plugin that you use
        # don't control this. This can prevent some types of
        # disablers.
        # [REQUIRED PROTOCOLLIB]
        invalidabilities:
          # Enable Invalid Abilities check?
          # The player is instant-kicked when send this packet.
          enable: true
          # Enable onground option?
          # To prevent some false flags, you can set this value to
          # true to only check if the player is on ground. This help a
          # lot if you have a plugin with double or infinite jumps, if
          # you don't have, you can disable this to make a better
          # control of this packet.
          onground: true
          # Enable confirm option?
          # When enable this, the anticheat wait 3 vls in 2 seconds
          # to make a kick to the player, this can be util if you
          # have problems with false positive kicks from this check.
          #
          # Every 1 invalid abitilies packet is detected, this add 1 vl.
          confirm: true
        # Prevent player from send a invalid position packet.
        # This prevent some types of hacks, exploits and disablers.
        # You need to configure this with a perfect value, so you
        # can block some types of crashers and control better this
        # packet.
        invalidposition:
          # Enable Invalid Position check?
          # The player is instant-kicked when send this packet.
          enable: true
          # Define here the values, you can increase and decrease
          # to view what is a better value, if you increase, you can
          # allow max range for the position and a less value, can
          # make more aggresive.
          x: 3.0E7
          y: 3.0E7
          z: 3.0E7
        # It blocks illegal connections.
        nulladdress:
          # Enable Null Address check?
          # Prevents players from join with null address.
         enable: true
         
## Phase
# This check prevents players from moving through blocks, effectively
# preventing collision cheating. This is strict when detecting, you can
# understand better when you test this check and see the configuration.
phase:
  # Optionally, disable this check in certain worlds.
  disabled-worlds: {}
  # Enable Phase check?
  detect:
    java: true
    bedrock: true

  # Should player movement be blocked when detected?
  cancel: true
  # Should toggle the list of excluded blocks by default?
  #
  # WARNING! When you disable this, you can find some problems
  # in especial cases. To fix this problems, you can use the option
  # 'excluded-blocks' to exclude these blocks cause problems that
  # the function 'fixer' can't prevent. Use 'true' to allow the
  # usage of that folder with default values or 'false' to disable
  # this. Remember, the list of blocks used is the version of the
  # server, you can enter to that files in 'FoxAddition/versions/phase'.
  eb:
    # Enable this feature?
    enable: true
    # What version do you use?
    # Define here you version of blocks to exclude in case this can't be found
    # automatically, use the number of the version, example:
    #
    # 1.8:
    # version: 8
    # 1.20:
    # version: 20
    # 1.16.5:
    # version: 16
    # 
    # Use "auto" to automatically detect.
    version: auto
  # Try to prevent false flags based in certain cases.
  # This feature has been only tested in 1.8.x, 1.12.x and
  # 1.20.x. If you find a problem in this option, you can
  # report problems in the official discord server or
  # in the discussion page in spigot. You can this use fixers
  # when you disable the default excluded blocks.
  fixer:
    # Prevent false flags ignoring the block.
    block:
      # Ignore doors detection?
      # This prevent false flags in doors, recommended.
      door: true
  # This feature is perfect if you have problem with some blocks,
  # you can exclude here the blocks that make problems with this check.
  # You need see the logs to view the block that cause problems and go
  # here to define the block types that are excluded from this check.
  # For example:
  #
  # excluded-blocks:
  # - BED_BLOCK
  # - TRAP_DOOR
  excluded-blocks: []
  # Add VLs (Violation Levels) to apply when this fails.
  vls: 1
    
  # The decay is used to configure the decay system for VLS (Violation Levels).
  # Decay is a mechanism that gradually reduces a player's VLS over time.
  decay:
    # Enable this feature?
    enable: true
    # Determines how often the decay process runs (in seconds).
    interval: 10
    # Specifies the amount of VLS to subtract from a player's VLS
    # in each decay.
    amount: 6
  # Violation Thresholds
  commands:
    6: 'foxaddition notify &e{player}&r might be using &a&lPhase&r.'
    10: 'foxaddition notify &e{player}&r is possible using &a&lPhase&r.'
    12:
      - 'foxaddition notify &e{player}&r has been removed for &aPhase&r.'
      - 'kick {player} Moving through blocks.'
          
## Reach
# Prevent players from using Reach or related hacks.
reach:
  # Optionally, disable this check in certain worlds.
  disabled-worlds: {}

  # List of modules.
  modules:
    # Prevent hackers from attack too many far.
    hit:
      # Enable Reach [Hit] check?
      # Prevents players from attacking from an unusually far distance.
      detect:
        java: true
        bedrock: true
      # Fix a rare false flag in Paper 1.20, this check the current item
      # of the hand of the player and ignore if this has any projectile, this
      # prevent a rare false flag but can allow bypass, ONLY enable if you has
      # this rare problem and you want to fix.
      fix: false
      # Should block hit when detected?
      cancel:
        # Enable this feature to block hits when detected.
        enable: true
        # Choose the type of cancel you want:
        # - "block": Prevents both damage and the hit.
        # - "silent": Inflicts damage, but the damage dealt is 0.
        type: block
      # Determines the maximum allowed distance between the attacker and the target.
      # If the distance of an attack exceeds this threshold, it raises suspicion
      # of a 'Reach' hack. Adjusting this value affects sensitivity.
      # Setting the threshold too less may lead to false positives,
      # while setting it too high might overlook legitimate long-range attacks.
      threshold:
        # This is for Java players, if you don't have Floodgate plugin,
        # this is the default for both editions.
        java:
          horizontal: 4.10
          # For horizontal, a strict reach is 3.75, but for avoid false
          # flags, is recommended this value.
          vertical: 3.49
          # For vertical, a strict reach is 3.45, but for avoid false
          # flags, is recommended this value.
        # This is for Bedrock players. This have separated config because
        # bedrock players has more distance of attack than Java players.
        # [REQUIRED BEDROCK PLAYER HOOK]
        bedrock:
          horizontal: 5.11
          # For horizontal, a strict reach is 5.10, but for avoid false
          # flags, is recommended this value.
          vertical: 4.10
          # For vertical, a strict reach is 4.05, but for avoid false
          # flags, is recommended this value.
      # Adjusts the detection threshold when the attacker is jumping. 
      # Players can reach farther when jumping due to extra momentum.
      # This multiplier increases detection tolerance for mid-air attacks.
      # Be cautious with this value; a low multiplier can yield false positives,
      # while a low one might miss legitimate jumps during attacks.
      multiplier: 1.5
      # Add VLs (Violation Levels) to apply when this fails.
      vls: 1
    # Prevent hackers from interact with blocks too far.
    block:
      # Enable Reach [Block] check?
      # Prevents players from break/place blocks from an unusually far distance.
      detect:
        java: true
        bedrock: true
      # Determines the maximum allowed distance between the player and the block.
      threshold:
        place:
          horizontal: 4.82
          vertical: 5.1
        break:
          horizontal: 5.25
          vertical: 5.83
      # Should block place when detected?
      cancel:
        # Enable this feature to block hits when detected.
        enable: true
        # Should the block be restored after being prevented?
        # Use 'true' to restore the block, or 'false' to remove it.
        # In this case, only remove the block when is blocked
        # in a place, in case a break, this only cancel the
        # event.
        giveBlock: true
      # Add VLs (Violation Levels) to apply when this fails.
      vls: 1

  # The decay is used to configure the decay system for VLS (Violation Levels).
  # Decay is a mechanism that gradually reduces a player's VLS over time.
  decay:
    # Enable this feature?
    enable: true
    # Determines how often the decay process runs (in seconds).
    interval: 8
    # Specifies the amount of VLS to subtract from a player's VLS
    # in each decay.
    amount: 3
  # Violation Thresholds
  commands:
    2: 'foxaddition notify &e{player}&r might be using &a&lReach&8 [#1]&r.'
    4: 'foxaddition notify &e{player}&r might be using &a&lReach&8 [#2]&r.'
    6:
     - 'foxaddition notify &e{player}&r has been removed for &aReach&r.'
     - 'kick {player} Reach or related hacks.'
            
version: 5